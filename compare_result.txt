Detecting adjacent faces, threshold: 0.3
Starting adjacent face detection...
Checking 15 faces, threshold: 0.3
Detection completed, found 2 adjacent pairs out of 105 pairs checked
Execution time: 0.000116 seconds
C++模块已加载
已加载C++重叠边检测模块
C++模块已加载
测试网格: 17 个顶点, 15 个面片

=== 执行C++实现 ===
C++使用阈值: 0.3
C++检测的相邻对:
  对 1: (6, 14)
  对 2: (12, 13)
C++检测到 4 个相邻面，来自 2 对
C++检测到的面片: [6, 12, 13, 14]
C++执行时间: 0.000116秒

=== 执行Python实现 ===
Python使用阈值: 0.3
Python检测到 8 个相邻面（来自 8 对）
Python检测到的相邻对: [(0, 14), (1, 14), (6, 14), (8, 14), (9, 14), (12, 13), (12, 14), (13, 14)]
Python检测到的面片: [0, 1, 6, 8, 9, 12, 13, 14]
Python执行时间: 0.016019秒

=== 结果比较 ===
没有仅在C++中检测到的面片
仅在Python中检测到的面片 (4个): [0, 1, 8, 9]
两种方法共同检测到的面片 (4个): [6, 12, 13, 14]
一致率: 50.00%

=== 问题面片分析 ===
面片 0:
  顶点坐标: [[0. 0. 0.]
 [1. 0. 0.]
 [1. 1. 0.]]
  边长: [1.         1.         1.41421356]
  面积: 0.5
  质心: [0.66666667 0.33333333 0.        ]
  平均边长: 1.1380711874576983
  潜在相交的面片:
    面片 14: 相交, 距离=0.6064
面片 1:
  顶点坐标: [[0. 0. 0.]
 [1. 1. 0.]
 [0. 1. 0.]]
  边长: [1.41421356 1.         1.        ]
  面积: 0.5
  质心: [0.33333333 0.66666667 0.        ]
  平均边长: 1.1380711874576983
  潜在相交的面片:
    面片 14: 相交, 距离=0.6064
面片 8:
  顶点坐标: [[1. 1. 0.]
 [0. 1. 0.]
 [0. 1. 1.]]
  边长: [1.         1.         1.41421356]
  面积: 0.5
  质心: [0.33333333 1.         0.33333333]
  平均边长: 1.1380711874576983
  潜在相交的面片:
    面片 14: 相交, 距离=0.5281
面片 9:
  顶点坐标: [[1. 1. 0.]
 [0. 1. 1.]
 [1. 1. 1.]]
  边长: [1.41421356 1.         1.        ]
  面积: 0.5
  质心: [0.66666667 1.         0.66666667]
  平均边长: 1.1380711874576983
  潜在相交的面片:
    面片 14: 相交, 距离=0.4359

=== 分析问题面片对 ===
检查三角形相交检测差异:
面片 0 与 14: 相交, 距离=0.6064, 最小平均边长=1.1381
面片 1 与 14: 相交, 距离=0.6064, 最小平均边长=1.1381
面片 8 与 14: 相交, 距离=0.5281, 最小平均边长=1.1381
面片 9 与 14: 相交, 距离=0.4359, 最小平均边长=1.1381
